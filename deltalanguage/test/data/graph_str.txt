DeltaGraph[main] {
    node[node_0]:
        ports:
            out:
                output, Int8 -> forked_return_output_2.x
        bodies:
            *PyConstBody
                tags: <lambda>

    node[node_1]:
        ports:
            out:
                output, Int8 -> forked_return_output_2.y
        bodies:
            *PyConstBody
                tags: <lambda>

    node[forked_return_output_2]:
        ports:
            in:
                x, Int8
                y, Int8
            out:
                a, Int32 -> template_template_no_output_no_body_3.i
                b, Bool -> multi_body_no_output_4.i
                d, Int32 -> MigenFoo_5.i
                c, Int32 -> experiment_stopper_6.completed
        bodies:
            *PyConstBody
                tags: forked_return_output

    node[template_template_no_output_no_body_3]:
        ports:
            in:
                i, Int8
        bodies:
            None

    node[multi_body_no_output_4]:
        ports:
            in:
                i, Int8
        bodies:
            *PyFuncBody
                tags: multi_body_no_output
            PyMethodBody
                tags: method_func_no_output
            PyInteractiveBody
                tags: interactive_func_no_output

    node[MigenFoo_5]:
        ports:
            in:
                i, Int8, optional
        bodies:
            *PyMigenBody
                tags: _py_sim_body

    node[experiment_stopper_6]:
        ports:
            in:
                completed, Int8
        bodies:
            *PyConstBody
                tags: experiment_stopper

}
