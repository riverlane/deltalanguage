( name = "main",
  bodies = [
    ( python = (
        dillImpl = "\x80\x04\x95O\x01\x00\x00\x00\x00\x00\x00\x8c.deltalanguage.wiring._node_classes.node_bodies\x94\x8c\vPyConstBody\x94\x93\x94)\x81\x94}\x94(\x8c\x05value\x94N\x8c\bcallback\x94\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\a\x8c\f_create_code\x94\x93\x94(K\x00K\x00K\x00K\x00K\x01J\x13\x00\x00\x01C\x04\x88\x00S\x00\x94N\x85\x94))\x8c9/workdir/deltalanguage/wiring/_node_classes/real_nodes.py\x94\x8c\b<lambda>\x94M \x03C\x00\x94\x8c\x0epotential_node\x94\x85\x94)t\x94R\x94}\x94h\x0fNh\a\x8c\f_create_cell\x94\x93\x94K(\x85\x94R\x94\x85\x94}\x94Nt\x94R\x94\x8c\x04args\x94)\x8c\x06kwargs\x94}\x94ub." ) ),
    ( python = (
        dillImpl = "\x80\x04\x95O\x01\x00\x00\x00\x00\x00\x00\x8c.deltalanguage.wiring._node_classes.node_bodies\x94\x8c\vPyConstBody\x94\x93\x94)\x81\x94}\x94(\x8c\x05value\x94N\x8c\bcallback\x94\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\a\x8c\f_create_code\x94\x93\x94(K\x00K\x00K\x00K\x00K\x01J\x13\x00\x00\x01C\x04\x88\x00S\x00\x94N\x85\x94))\x8c9/workdir/deltalanguage/wiring/_node_classes/real_nodes.py\x94\x8c\b<lambda>\x94M \x03C\x00\x94\x8c\x0epotential_node\x94\x85\x94)t\x94R\x94}\x94h\x0fNh\a\x8c\f_create_cell\x94\x93\x94K\x02\x85\x94R\x94\x85\x94}\x94Nt\x94R\x94\x8c\x04args\x94)\x8c\x06kwargs\x94}\x94ub." ) ),
    ( migen = (
        verilog = "/* Machine-generated using Migen */\nmodule counter_2(\n\tinput [31:0] in1_in_data,\n\tinput in1_in_valid,\n\toutput reg in1_in_ready,\n\tinput [31:0] in2_in_data,\n\tinput in2_in_valid,\n\toutput reg in2_in_ready,\n\toutput reg [31:0] out1_out_data,\n\toutput reg out1_out_valid,\n\tinput out1_out_ready,\n\toutput reg [31:0] out2_out_data,\n\toutput reg out2_out_valid,\n\tinput out2_out_ready,\n\tinput sys_clk,\n\tinput sys_rst\n);\n\nreg [31:0] counter = 32\'d0;\n\n// synthesis translate_off\nreg dummy_s;\ninitial dummy_s <= 1\'d0;\n// synthesis translate_on\n\n\n// synthesis translate_off\nreg dummy_d;\n// synthesis translate_on\nalways @(*) begin\n\tin1_in_ready <= 1\'d0;\n\tin2_in_ready <= 1\'d0;\n\tif ((counter >= 2\'d3)) begin\n\t\tin1_in_ready <= 1\'d1;\n\t\tin2_in_ready <= 1\'d1;\n\tend\n// synthesis translate_off\n\tdummy_d <= dummy_s;\n// synthesis translate_on\nend\n\n// synthesis translate_off\nreg dummy_d_1;\n// synthesis translate_on\nalways @(*) begin\n\tout1_out_data <= 32\'d0;\n\tout1_out_valid <= 1\'d0;\n\tout2_out_data <= 32\'d0;\n\tout2_out_valid <= 1\'d0;\n\tif (((out1_out_ready & out2_out_ready) == 1\'d1)) begin\n\t\tif ((counter == 3\'d5)) begin\n\t\t\tout1_out_data <= (in1_in_data + in2_in_data);\n\t\t\tout2_out_data <= counter;\n\t\t\tout1_out_valid <= (in1_in_valid & in2_in_valid);\n\t\t\tout2_out_valid <= (in1_in_valid & in2_in_valid);\n\t\tend else begin\n\t\t\tout1_out_valid <= 1\'d0;\n\t\t\tout2_out_valid <= 1\'d0;\n\t\tend\n\tend\n// synthesis translate_off\n\tdummy_d_1 <= dummy_s;\n// synthesis translate_on\nend\n\nalways @(posedge sys_clk) begin\n\tcounter <= (counter + 1\'d1);\n\tif (sys_rst) begin\n\t\tcounter <= 32\'d0;\n\tend\nend\n\nendmodule\n\n" ) ),
    ( python = (
        dillImpl = "\x80\x04\x95\v\x01\x00\x00\x00\x00\x00\x00\x8c.deltalanguage.wiring._node_classes.node_bodies\x94\x8c\nPyFuncBody\x94\x93\x94)\x81\x94}\x94\x8c\bcallback\x94\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\x06\x8c\f_create_code\x94\x93\x94(K\x01K\x00K\x00K\x01K\x02KCC\b|\x00d\x01\x14\x00S\x00\x94NM\xe8\x03\x86\x94)\x8c\x01a\x94\x85\x94\x8c3/workdir/examples/tutorials/migen_simple_example.py\x94\x8c\nmultiplier\x94K\x12C\x02\x00\x02\x94))t\x94R\x94}\x94h\x10NN}\x94Nt\x94R\x94sb." ) ),
    ( python = (
        dillImpl = "\x80\x04\x95\a\x01\x00\x00\x00\x00\x00\x00\x8c.deltalanguage.wiring._node_classes.node_bodies\x94\x8c\nPyFuncBody\x94\x93\x94)\x81\x94}\x94\x8c\bcallback\x94\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\x06\x8c\f_create_code\x94\x93\x94(K\x02K\x00K\x00K\x02K\x02KCC\b|\x00|\x01\x17\x00S\x00\x94N\x85\x94)\x8c\x01a\x94\x8c\x01b\x94\x86\x94\x8c3/workdir/examples/tutorials/migen_simple_example.py\x94\x8c\x05adder\x94K\rC\x02\x00\x02\x94))t\x94R\x94}\x94h\x11NN}\x94Nt\x94R\x94sb." ) ),
    ( python = (
        dillImpl = "\x80\x04\x95V\x02\x00\x00\x00\x00\x00\x00\x8c.deltalanguage.wiring._node_classes.node_bodies\x94\x8c\fPyMethodBody\x94\x93\x94)\x81\x94}\x94(\x8c\bcallback\x94\x8c\ndill._dill\x94\x8c\x10_create_function\x94\x93\x94(h\x06\x8c\f_create_code\x94\x93\x94(K\x02K\x00K\x00K\x02K\x03KCC\x12|\x00\xa0\x00|\x01\xa1\x01\x01\x00t\x01\x82\x01d\x01S\x00\x94\x8c\x84Saves input of any type and exit.\n\n        Parameters\n        ----------\n        val : object\n            Incoming message.\n        \x94N\x86\x94\x8c\x05store\x94\x8c\x10DeltaRuntimeExit\x94\x86\x94\x8c\x04self\x94\x8c\x03val\x94\x86\x94\x8c(/workdir/deltalanguage/lib/primitives.py\x94\x8c\rsave_and_exit\x94K\xc3C\x04\x00\t\n\x01\x94))t\x94R\x94}\x94\x8c\x10DeltaRuntimeExit\x94\x8c\x1edeltalanguage.runtime._runtime\x94h\x0f\x93\x94sh\x15NN}\x94Nt\x94R\x94\x8c\binstance\x94\x8c\x1cdeltalanguage.lib.primitives\x94\x8c\nStateSaver\x94\x93\x94)\x81\x94}\x94(\x8c\x05saved\x94]\x94\x8c\tcondition\x94N\x8c\x06verbose\x94\x89ubub." ) ) ],
  nodes = [
    ( name = "node_0",
      body = 0,
      inPorts = [],
      outPorts = [
        ( name = "",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ) ] ),
    ( name = "node_1",
      body = 1,
      inPorts = [],
      outPorts = [
        ( name = "",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ) ] ),
    ( name = "counter_2",
      body = 2,
      inPorts = [
        ( name = "in1",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub.",
          optional = true ),
        ( name = "in2",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub.",
          optional = true ) ],
      outPorts = [
        ( name = "out2",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ),
        ( name = "out1",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ) ] ),
    ( name = "multiplier_3",
      body = 3,
      inPorts = [
        ( name = "a",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub.",
          optional = false ) ],
      outPorts = [
        ( name = "",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ) ] ),
    ( name = "adder_4",
      body = 4,
      inPorts = [
        ( name = "a",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub.",
          optional = false ),
        ( name = "b",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub.",
          optional = false ) ],
      outPorts = [
        ( name = "",
          type = "\x80\x04\x95\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x04DInt\x94\x93\x94)\x81\x94}\x94(\x8c\f_pack_format\x94N\x8c\x04size\x94h\x00\x8c\x05DSize\x94\x93\x94)\x81\x94}\x94(\x8c\x0eis_placeholder\x94\x89\x8c\x03val\x94K ubub." ) ] ),
    ( name = "save_and_exit_5",
      body = 5,
      inPorts = [
        ( name = "val",
          type = "\x80\x04\x95H\x00\x00\x00\x00\x00\x00\x00\x8c%deltalanguage.data_types._delta_types\x94\x8c\x03Top\x94\x93\x94)\x81\x94}\x94\x8c\f_pack_format\x94Nsb.",
          optional = false ) ],
      outPorts = [] ) ],
  graph = [
    ( srcNode = 0,
      srcOutPort = 0,
      destNode = 2,
      destInPort = 0,
      direct = false ),
    ( srcNode = 1,
      srcOutPort = 0,
      destNode = 2,
      destInPort = 1,
      direct = false ),
    ( srcNode = 2,
      srcOutPort = 0,
      destNode = 3,
      destInPort = 0,
      direct = false ),
    ( srcNode = 2,
      srcOutPort = 1,
      destNode = 4,
      destInPort = 0,
      direct = false ),
    ( srcNode = 3,
      srcOutPort = 0,
      destNode = 4,
      destInPort = 1,
      direct = false ),
    ( srcNode = 4,
      srcOutPort = 0,
      destNode = 5,
      destInPort = 0,
      direct = false ) ] )